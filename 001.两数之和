/*
Origin Link: https://leetcode-cn.com/problems/two-sum/
*/

#include<vector>
#include<iostream>
#include<unordered_map>
using namespace std;
vector<int> getTargetCombine(vector<int> & nums , int target)
{
    // Key : nums value   Value : nums index
    unordered_map<int, int> hashTable;
    for(int i = 0 ; i < nums.size() ; ++i)
    {
        unordered_map<int, int>::iterator another_side = hashTable.find(target - nums[i]);
        if (another_side != hashTable.end())
        {
            return {another_side->second , i};
        }
        hashTable[nums[i]] = i;
    }
    return {};
}

int main()
{
    vector<int> vec ;
    int target;
    int len;
    cin >> len;
    int tmp;
    while(len--)
    {
        cin>>tmp;
        vec.push_back(tmp);
    }
    cin >> target;
    vector<int> out = getTargetCombine(vec , target);
    cout << '{'<<out[0] << ',' << out[1] << '}' << endl;
    cin.get();
    return 0;
}
